@page "/SupplyCategory"
@inject HttpClient http

<h3>Categories de insumos</h3>

@if (SupplyCategories == null)
{
    <p><em>Carregando...</em></p>
}
else if (SupplyCategories.Count() == 0)
{
    <p><em>Não existe categorias de insumos cadastradas!</em></p>
}
else
{

    <table class="table">
        <thead>
            <tr>
                <th>Categoria</th>
                <th>Descrição</th>
                <th>Edita</th>
                <th>Deleta</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var supplyCategory in SupplyCategories)
            {
                <tr>
                    <td>@supplyCategory.Name</td>
                    <td>@supplyCategory.Description</td>
                    <td>
                        <a class="btn btn-primary text-white" href="/SupplyCategory/Edit/@supplyCategory.Id">Editar</a>
                    </td>
                    <td>
                        <a class="btn btn-danger text-white" @onclick="@(() => DeleteSupplyCategory(supplyCategory.Id))">Deletar</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<ConfirmationForm @ref="Confirmation" OnCancel="@CancelConfirm" OnConfirmation="@DeleteConfirm">
    <div>Deseja realmente excluir este item ?</div>    
</ConfirmationForm>

<div>
    <a class="btn btn-success text-white" href="SupplyCategory/Create">Adicionar</a>
</div>

@code {
    List<SupplyCategory> SupplyCategories { get; set; }
    ConfirmationForm Confirmation;
    int SupplyCategoryId;

    protected override async Task OnInitializedAsync()
    {
        await LoadSupplyCategories();
    }

    async Task LoadSupplyCategories()
    {
        SupplyCategories = await http.GetJsonAsync<List<SupplyCategory>>("/api/SupplyCategory/Get");
    }

    void DeleteSupplyCategory(int id)
    {
        Confirmation.Display();
        SupplyCategoryId = id;
    }

    async Task DeleteConfirm()
    {
        await http.DeleteAsync($"/api/SupplyCategory/Delete/{SupplyCategoryId}");
        Confirmation.Hide();
        await LoadSupplyCategories();
    }

    async Task CancelConfirm()
    {
        Confirmation.Hide();
        SupplyCategoryId = 0;
    }

}
